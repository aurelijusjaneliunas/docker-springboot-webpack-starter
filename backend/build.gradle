buildscript {

  ext {
    springBootVersion = '1.3.5.RELEASE'
  }

  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }

//  configurations {
//    compile.exclude module: "spring-boot-starter-tomcat"
//  }

}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {

  baseName = 'backend'
  version = '1.0.0'

}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  jcenter()
}

dependencies {

  compile('org.springframework.boot:spring-boot-devtools')

//  compile('org.springframework.boot:spring-boot-starter-undertow')
  compile('org.springframework.boot:spring-boot-starter-web')
  compile('org.springframework.boot:spring-boot-starter-thymeleaf')
  compile('org.springframework.boot:spring-boot-starter-redis')

  compile('org.springframework.boot:spring-boot-starter-security')
  compile('org.springframework.session:spring-session')

  compile('org.codehaus.groovy:groovy')

  compile 'net.jawr:jawr-core:3.7'
  compile 'net.jawr.extensions:jawr-spring-extension:3.7'
  compile 'com.github.dtrunk90:thymeleaf-jawr-extension:1.0.1'

  compile 'org.apache.commons:commons-lang3:3.4'
  compile 'commons-io:commons-io:2.5'
  compile 'com.google.code.gson:gson:2.7'

  testCompile('org.springframework.boot:spring-boot-starter-test')
  testCompile('org.springframework.security:spring-security-test')
  testCompile('org.spockframework:spock-spring')
  testCompile('com.geowarin:spring-spock-mvc:0.2.1')

}

eclipse {

  classpath {
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
  }

}

idea {

    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

bootRun {
  if ( System.getProperty('debug', 'false') == 'true') {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=8585,suspend=n']
  }
}
